#!/bin/bash -e
# vim: set ts=4 sw=4 sts=4 et :

##
## bind-directories will bind mount a list of directories or files
## or will attempt a soft-link if source (olddir) is a file and target
## does not already exist
##
## Pass space seperated list 'olddir:newdir'
##
## To umount all binds, just pass '--umount' as first arg
##
## Example:
## bind-directories '/rw/usrlocal/srv/salt:/srv/salt' /rw/usrlocal/srv/pillar:/srv/pillar '/rw/usrlocal/etc/salt:/etc/salt'
##


case $1 in
    --help)
        echo
        echo "bind-directories will bind mount a list of directories"
        echo
        echo "bind-directories [--help]"
        echo "bind-directories [--umount] old:newdir [olddir:newdir]"
        echo
        echo "Example:"
        echo "bind-directories '/rw/usrlocal/srv/salt:/srv/salt' /rw/usrlocal/srv/pillar:/srv/pillar"
        echo "bind-directories --umount '/rw/usrlocal/srv/salt:/srv/salt' /rw/usrlocal/srv/pillar:/srv/pillar"
        echo
        exit 0
        ;;
        
    --umount)
        UMOUNT=1
        shift
        ;;
esac

## Bind directories
for bind in $@; do
    rw_dir="${bind%%:*}"
    ro_dir="${bind##*:}"

    # Check to see if rw_dir is a file; if so just soft-link it
    if ! [ -d "${rw_dir}" ] && [ -f "${rw_dir}" ]; then
        if ! [ -a "${ro_dir}" ]; then
            ln -sf "${rw_dir}" "${ro_dir}"
        fi
        continue
    fi

    # Make sure ro directory is not mounted
    umount "${ro_dir}" 2> /dev/null || true

    # Exit now if --umount option passed or VM is a TemplateVM
    if [ "${UMOUNT}" == "1" ] || [ -f "/var/run/qubes-service/updates-proxy-setup" ]; then
        echo "Umounting only..."
        continue
    fi

    # Make sure ro directory exists
    if ! [ -d "${ro_dir}" ]; then
        mkdir -p "${ro_dir}" 
    fi

    # Initially copy over data directories to /rw if rw directory does not exist
    if ! [ -d "${rw_dir}" ]; then
        mkdir -p "${rw_dir}"
        rsync -hax "${ro_dir}/." "${rw_dir}"
    fi
    
    # Bind the directory
    sync
    mount --bind "${rw_dir}" "${ro_dir}"
done
sync

exit 0
